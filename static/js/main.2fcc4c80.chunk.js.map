{"version":3,"sources":["views/counter/index.js","containers/CounterContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","handleIncrement","handleReset","handleDecrement","currentValue","Button","variant","color","onClick","CounterContainer","props","state","bind","this","setState","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAkBeA,EAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,gBAAiBC,EAAlD,EAAkDA,aAAlD,OACd,gCACE,6BAAK,oBAAsBA,IAC3B,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASP,EAArD,uBAGA,cAACI,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAASN,EAArC,mBAGA,cAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAASL,EAAvD,2BCwCWM,E,kDA/Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXP,aAAc,GAEhB,EAAKH,gBAAkB,EAAKA,gBAAgBW,KAArB,gBACvB,EAAKV,YAAc,EAAKA,YAAYU,KAAjB,gBACnB,EAAKT,gBAAkB,EAAKA,gBAAgBS,KAArB,gBAPN,E,mDAUnB,WAAmB,IAAD,OAChBC,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBP,aAAc,EAAKO,MAAMP,aAAe,Q,yBAI5C,WACES,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBP,aAAc,Q,6BAIlB,WAAmB,IAAD,OAChBS,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBP,aAAc,EAAKO,MAAMP,aAAe,Q,oBAI5C,WACE,OACE,cAAC,EAAD,CACEH,gBAAiBY,KAAKZ,gBACtBC,YAAaW,KAAKX,YAClBC,gBAAiBU,KAAKV,gBACtBC,aAAcS,KAAKF,MAAMP,mB,GAnCFW,IAAMC,W,MCOtBC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2fcc4c80.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Counter = ({ handleIncrement, handleReset, handleDecrement, currentValue }) => (\r\n  <div>\r\n    <h1>{\"Current value :  \" + currentValue}</h1>\r\n    <Button variant=\"contained\" color=\"primary\" onClick={handleIncrement}>\r\n      Increment\r\n    </Button>\r\n    <Button variant=\"contained\" onClick={handleReset}>\r\n      Reset\r\n    </Button>\r\n    <Button variant=\"contained\" color=\"secondary\" onClick={handleDecrement}>\r\n      Decrement\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport Counter from \"../views/counter/index\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CounterContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentValue: 0,\r\n    };\r\n    this.handleIncrement = this.handleIncrement.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.handleDecrement = this.handleDecrement.bind(this);\r\n  }\r\n\r\n  handleIncrement() {\r\n    this.setState((state) => ({\r\n      currentValue: this.state.currentValue + 1,\r\n    }));\r\n  }\r\n\r\n  handleReset() {\r\n    this.setState((state) => ({\r\n      currentValue: 0,\r\n    }));\r\n  }\r\n\r\n  handleDecrement() {\r\n    this.setState((state) => ({\r\n      currentValue: this.state.currentValue - 1,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Counter\r\n        handleIncrement={this.handleIncrement}\r\n        handleReset={this.handleReset}\r\n        handleDecrement={this.handleDecrement}\r\n        currentValue={this.state.currentValue}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCounterContainer.propTypes = {\r\n  handleIncrement: PropTypes.func,\r\n  handleReset: PropTypes.func,\r\n  handleDecrement: PropTypes.func,\r\n  currentValue: PropTypes.number,\r\n};\r\n\r\nexport default CounterContainer;\r\n","import CounterContainer from \"../src/containers/CounterContainer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CounterContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}