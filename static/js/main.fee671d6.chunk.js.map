{"version":3,"sources":["views/counterManager/index.js","views/counter/index.js","containers/CounterContainer.js","containers/CounterManagerContainer.js","App.js","reportWebVitals.js","index.js"],"names":["CounterManager","props","totalCounters","Button","variant","color","onClick","addCounter","resetCounterManager","removeCounter","Counter","id","currentValue","handleIncrement","handleReset","handleDecrement","CounterContainer","state","bind","this","setState","console","log","React","Component","CounterManagerContainer","currentId","maxId","allCounters","i","push","counterItems","map","item","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee671d6.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst CounterManager = (props) => (\n  <div>\n    <h1>Counter manager.</h1>\n    <h2>{\"Avalible counters :  \" + props.totalCounters}</h2>\n    <Button variant=\"contained\" color=\"primary\" onClick={props.addCounter}>\n      Add Counter\n    </Button>\n    <Button variant=\"contained\" onClick={props.resetCounterManager}>\n      Reset\n    </Button>\n    <Button variant=\"contained\" color=\"secondary\" onClick={props.removeCounter}>\n      Del Counter\n    </Button>\n    <hr />\n  </div>\n);\n\nexport default CounterManager;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Counter = (props) => (\n  <div>\n    <span>{\"Counter # \" + props.id}</span>\n    <h2>{\"Current value :  \" + props.currentValue}</h2>\n    <Button variant=\"contained\" color=\"primary\" onClick={props.handleIncrement}>\n      Increment\n    </Button>\n    <Button variant=\"contained\" onClick={props.handleReset}>\n      Reset\n    </Button>\n    <Button variant=\"contained\" color=\"secondary\" onClick={props.handleDecrement}>\n      Decrement\n    </Button>\n    <hr />\n  </div>\n);\n\nexport default Counter;\n","import React from \"react\";\nimport Counter from \"../views/counter/index\";\nimport PropTypes from \"prop-types\";\n\nclass CounterContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentValue: 0,\n    };\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleDecrement = this.handleDecrement.bind(this);\n  }\n\n  handleIncrement() {\n    this.setState((state) => ({\n      currentValue: this.state.currentValue + 1,\n    }));\n  }\n\n  handleReset() {\n    this.setState((state) => ({\n      currentValue: 0,\n    }));\n  }\n\n  handleDecrement() {\n    this.setState((state) => ({\n      currentValue: this.state.currentValue - 1,\n    }));\n  }\n\n  render() {\n    console.log(\"CounterContainer:\", this.props);\n    const props = {\n      handleIncrement: this.handleIncrement,\n      handleReset: this.handleReset,\n      handleDecrement: this.handleDecrement,\n      currentValue: this.state.currentValue,\n      id: this.props.id,\n    };\n    return <Counter {...props} />;\n  }\n}\n\nCounterContainer.propTypes = {\n  handleIncrement: PropTypes.func,\n  handleReset: PropTypes.func,\n  handleDecrement: PropTypes.func,\n  currentValue: PropTypes.number,\n  id: PropTypes.number,\n};\n\nexport default CounterContainer;\n","import React from \"react\";\nimport CounterManager from \"../views/counterManager/index\";\nimport CounterContainer from \"./CounterContainer\";\nimport PropTypes from \"prop-types\";\n\nclass CounterManagerContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalCounters: 1,\n      currentId: 1,\n      maxId: 1,\n    };\n    this.addCounter = this.addCounter.bind(this);\n    this.resetCounterManager = this.resetCounterManager.bind(this);\n    this.removeCounter = this.removeCounter.bind(this);\n  }\n\n  addCounter() {\n    this.setState((state) => ({\n      totalCounters: this.state.totalCounters + 1,\n      maxId: this.state.maxId + 1,\n    }));\n  }\n\n  resetCounterManager() {\n    this.setState((state) => ({\n      totalCounters: this.state.totalCounters ** 0,\n      currentId: 1,\n      maxId: 1,\n    }));\n  }\n\n  removeCounter() {\n    if (this.state.totalCounters > 1) {\n      this.setState((state) => ({\n        totalCounters: this.state.totalCounters - 1,\n        currentId: this.state.currentId + 1,\n      }));\n    }\n  }\n\n  render() {\n    const allCounters = [];\n\n    for (var i = 0; i < this.state.totalCounters; i += 1) {\n      allCounters.push(i + this.state.currentId);\n    }\n\n    const counterItems = allCounters.map((item) => <CounterContainer key={item} id={item} />);\n\n    const props = {\n      addCounter: this.addCounter,\n      removeCounter: this.removeCounter,\n      resetCounterManager: this.resetCounterManager,\n      totalCounters: this.state.totalCounters,\n    };\n    return (\n      <div>\n        <CounterManager {...props} />\n        {counterItems}\n      </div>\n    );\n  }\n}\n\nCounterManagerContainer.propTypes = {};\n\nexport default CounterManagerContainer;\n","import \"./App.css\";\nimport CounterManagerContainer from \"./containers/CounterManagerContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CounterManagerContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}