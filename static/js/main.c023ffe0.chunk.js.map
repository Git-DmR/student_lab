{"version":3,"sources":["AppRoutes.js","views/navTabs/index.js","views/counterManager/index.js","views/counter/index.js","containers/CounterContainer.js","containers/CounterManagerContainer.js","App.js","reportWebVitals.js","index.js"],"names":["home","about","counters","NavTabs","React","value","setValue","Box","sx","width","Tabs","onChange","event","newValue","centered","Tab","label","component","Link","to","CounterManager","props","totalCounters","Button","color","onClick","addCounter","resetCounterManager","removeCounter","Counter","id","currentValue","variant","handleIncrement","handleReset","handleDecrement","CounterContainer","state","bind","this","setState","console","log","Component","CounterManagerContainer","currentId","maxId","setTimeout","allCounters","i","push","counterItems","map","item","App","className","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQACaA,EAAO,QACPC,EAAQ,SACRC,EAAW,Y,OCgBT,SAASC,IACtB,MAA0BC,WAAe,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,MAAO,QAAlB,UACE,eAACC,EAAA,EAAD,CAAML,MAAOA,EAAOM,SANH,SAACC,EAAOC,GAC3BP,EAASO,IAKqCC,UAAQ,EAApD,UACE,cAACC,EAAA,EAAD,CAAKC,MAAM,OAAOX,MD7BN,IC6BmBY,UAAWC,IAAMC,GD7BpC,MC8BZ,cAACJ,EAAA,EAAD,CAAKC,MAAM,OAAOX,MAAOL,EAAMiB,UAAWC,IAAMC,GAAInB,IACpD,cAACe,EAAA,EAAD,CAAKC,MAAM,QAAQX,MAAOJ,EAAOgB,UAAWC,IAAMC,GAAIlB,IACtD,cAACc,EAAA,EAAD,CAAKC,MAAM,WAAWX,MAAOH,EAAUe,UAAWC,IAAMC,GAAIjB,OAE9D,0B,qDCdSkB,EAjBQ,SAACC,GAAD,OACrB,gCACE,kDACA,sDACsB,+BAAOA,EAAMC,mBAEnC,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASJ,EAAMK,WAAvC,yBAGA,cAACH,EAAA,EAAD,CAAQE,QAASJ,EAAMM,oBAAvB,mBACA,cAACJ,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASJ,EAAMO,cAAzC,yBAGA,2BCMWC,EAnBC,SAACR,GAAD,OACd,gCACE,+BAAO,eAAiBA,EAAMS,KAC9B,kDACkB,+BAAOT,EAAMU,kBAE/B,cAACR,EAAA,EAAD,CAAQS,QAAQ,YAAYR,MAAM,UAAUC,QAASJ,EAAMY,gBAA3D,uBAGA,cAACV,EAAA,EAAD,CAAQS,QAAQ,YAAYP,QAASJ,EAAMa,YAA3C,mBAGA,cAACX,EAAA,EAAD,CAAQS,QAAQ,YAAYR,MAAM,YAAYC,QAASJ,EAAMc,gBAA7D,uBAGA,2BC+CWC,E,kDA5Db,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CACXP,GAAI,EAAKT,MAAMS,GACfC,aAAc,GAEhB,EAAKE,gBAAkB,EAAKA,gBAAgBK,KAArB,gBACvB,EAAKJ,YAAc,EAAKA,YAAYI,KAAjB,gBACnB,EAAKH,gBAAkB,EAAKA,gBAAgBG,KAArB,gBARN,E,mDAWnB,WAAmB,IAAD,OAChBC,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBN,aAAc,EAAKM,MAAMN,aAAe,MAE1CU,QAAQC,IAAI,YAAcH,KAAKF,MAAMP,GAAK,4B,yBAG5C,WACES,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBN,aAAc,MAEhBU,QAAQC,IAAI,IAAMH,KAAKF,MAAMP,GAAK,8B,6BAGpC,WAAmB,IAAD,OAChBS,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBN,aAAc,EAAKM,MAAMN,aAAe,MAE1CU,QAAQC,IAAI,IAAMH,KAAKF,MAAMP,GAAK,oC,+BAGpC,WACEW,QAAQC,IAAI,IAAMH,KAAKF,MAAMP,GAAK,yB,kCAGpC,WACEW,QAAQC,IAAI,IAAMH,KAAKF,MAAMP,GAAK,4B,oBAGpC,WACE,IAAMT,EAAQ,CACZY,gBAAiBM,KAAKN,gBACtBC,YAAaK,KAAKL,YAClBC,gBAAiBI,KAAKJ,gBACtBJ,aAAcQ,KAAKF,MAAMN,aACzBD,GAAIS,KAAKlB,MAAMS,IAEjB,OAAO,cAAC,EAAD,eAAaT,Q,GAjDOjB,IAAMuC,WC6EtBC,E,kDA3Eb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CACXf,cAAe,EACfuB,UAAW,EACXC,MAAO,GAET,EAAKpB,WAAa,EAAKA,WAAWY,KAAhB,gBAClB,EAAKX,oBAAsB,EAAKA,oBAAoBW,KAAzB,gBAC3B,EAAKV,cAAgB,EAAKA,cAAcU,KAAnB,gBATJ,E,8CAYnB,WAAc,IAAD,OACXC,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBf,cAAe,EAAKe,MAAMf,cAAgB,EAC1CwB,MAAO,EAAKT,MAAMS,MAAQ,Q,iCAI9B,WACEL,QAAQC,IAAI,gBACRH,KAAKF,MAAMf,gBACbiB,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBf,cAAe,EACfuB,UAAW,EACXC,MAAO,MAETC,WAAWR,KAAKb,WAAY,Q,2BAIhC,WAAiB,IAAD,OACVa,KAAKF,MAAMf,cAAgB,GAC7BiB,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBf,cAAe,EAAKe,MAAMf,cAAgB,EAC1CuB,UAAW,EAAKR,MAAMQ,UAAY,Q,+BAKxC,WACEJ,QAAQC,IAAI,iC,oBAGd,WAGE,IAFA,IAAMM,EAAc,GAEXC,EAAI,EAAGA,EAAIV,KAAKF,MAAMf,cAAe2B,GAAK,EACjDD,EAAYE,KAAKD,EAAIV,KAAKF,MAAMQ,WAGlC,IAAMM,EAAeH,EAAYI,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAA6BvB,GAAIuB,GAAVA,MAEhEhC,EAAQ,CACZK,WAAYa,KAAKb,WACjBE,cAAeW,KAAKX,cACpBD,oBAAqBY,KAAKZ,oBAC1BL,cAAeiB,KAAKF,MAAMf,eAE5B,OACE,gCACE,cAAC,EAAD,eAAoBD,IACnB8B,S,GA/D6B/C,IAAMuC,WCsB7BW,MAnBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAACpD,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqD,KNfG,IMeSC,QAAS,kEAC5B,cAAC,IAAD,CAAOD,KAAMxD,EAAMyD,QAAS,kEAC5B,cAAC,IAAD,CAAOD,KAAMvD,EAAOwD,QAAS,gCAC7B,cAAC,IAAD,CAAOD,KAAMtD,EAAUuD,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KNfQ,OMeSC,QAAS,iEACjC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,0ECRpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c023ffe0.chunk.js","sourcesContent":["export const root = \"/\";\nexport const home = \"/home\";\nexport const about = \"/about\";\nexport const counters = \"/counters\";\nexport const emptyPage = \"/404\";\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { Link } from \"react-router-dom\";\nimport { root, home, about, counters } from \"../../AppRoutes\";\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nexport default function NavTabs() {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Tabs value={value} onChange={handleChange} centered>\n        <Tab label=\"Root\" value={root} component={Link} to={root} />\n        <Tab label=\"Home\" value={home} component={Link} to={home} />\n        <Tab label=\"About\" value={about} component={Link} to={about} />\n        <Tab label=\"Counters\" value={counters} component={Link} to={counters} />\n      </Tabs>\n      <hr />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst CounterManager = (props) => (\n  <div>\n    <h1>Counter manager.</h1>\n    <h2>\n      Avalible counters : <span>{props.totalCounters}</span>\n    </h2>\n    <Button color=\"primary\" onClick={props.addCounter}>\n      Add Counter\n    </Button>\n    <Button onClick={props.resetCounterManager}>Reset</Button>\n    <Button color=\"secondary\" onClick={props.removeCounter}>\n      Del Counter\n    </Button>\n    <hr />\n  </div>\n);\n\nexport default CounterManager;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Counter = (props) => (\n  <div>\n    <span>{\"Counter_Id: \" + props.id}</span>\n    <h2>\n      Current value : <span>{props.currentValue}</span>\n    </h2>\n    <Button variant=\"contained\" color=\"primary\" onClick={props.handleIncrement}>\n      Increment\n    </Button>\n    <Button variant=\"contained\" onClick={props.handleReset}>\n      Reset\n    </Button>\n    <Button variant=\"contained\" color=\"secondary\" onClick={props.handleDecrement}>\n      Decrement\n    </Button>\n    <hr />\n  </div>\n);\n\nexport default Counter;\n","import React from \"react\";\nimport Counter from \"../views/counter/index\";\nimport PropTypes from \"prop-types\";\n\nclass CounterContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      currentValue: 0,\n    };\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleDecrement = this.handleDecrement.bind(this);\n  }\n\n  handleIncrement() {\n    this.setState((state) => ({\n      currentValue: this.state.currentValue + 1,\n    }));\n    console.log(\"Counter #\" + this.state.id + \" has been incremented.\");\n  }\n\n  handleReset() {\n    this.setState((state) => ({\n      currentValue: 0,\n    }));\n    console.log(\"#\" + this.state.id + \" Counter has been reset.\");\n  }\n\n  handleDecrement() {\n    this.setState((state) => ({\n      currentValue: this.state.currentValue - 1,\n    }));\n    console.log(\"#\" + this.state.id + \" Counter has been decremented.\");\n  }\n\n  componentDidMount() {\n    console.log(\"#\" + this.state.id + \" Counter did mount.\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"#\" + this.state.id + \" Counter will unmount.\");\n  }\n\n  render() {\n    const props = {\n      handleIncrement: this.handleIncrement,\n      handleReset: this.handleReset,\n      handleDecrement: this.handleDecrement,\n      currentValue: this.state.currentValue,\n      id: this.props.id,\n    };\n    return <Counter {...props} />;\n  }\n}\n\nCounterContainer.propTypes = {\n  handleIncrement: PropTypes.func,\n  handleReset: PropTypes.func,\n  handleDecrement: PropTypes.func,\n  currentValue: PropTypes.number,\n  id: PropTypes.number,\n};\n\nexport default CounterContainer;\n","import React from \"react\";\nimport CounterManager from \"../views/counterManager/index\";\nimport CounterContainer from \"./CounterContainer\";\nimport PropTypes from \"prop-types\";\n\nclass CounterManagerContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalCounters: 1,\n      currentId: 1,\n      maxId: 1,\n    };\n    this.addCounter = this.addCounter.bind(this);\n    this.resetCounterManager = this.resetCounterManager.bind(this);\n    this.removeCounter = this.removeCounter.bind(this);\n  }\n\n  addCounter() {\n    this.setState((state) => ({\n      totalCounters: this.state.totalCounters + 1,\n      maxId: this.state.maxId + 1,\n    }));\n  }\n\n  resetCounterManager() {\n    console.log(\"Hard reset!!\");\n    if (this.state.totalCounters) {\n      this.setState((state) => ({\n        totalCounters: 0,\n        currentId: 1,\n        maxId: 1,\n      }));\n      setTimeout(this.addCounter, 200);\n    }\n  }\n\n  removeCounter() {\n    if (this.state.totalCounters > 1) {\n      this.setState((state) => ({\n        totalCounters: this.state.totalCounters - 1,\n        currentId: this.state.currentId + 1,\n      }));\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"CounterManager ready to go.\");\n  }\n\n  render() {\n    const allCounters = [];\n\n    for (var i = 0; i < this.state.totalCounters; i += 1) {\n      allCounters.push(i + this.state.currentId);\n    }\n\n    const counterItems = allCounters.map((item) => <CounterContainer key={item} id={item} />);\n\n    const props = {\n      addCounter: this.addCounter,\n      removeCounter: this.removeCounter,\n      resetCounterManager: this.resetCounterManager,\n      totalCounters: this.state.totalCounters,\n    };\n    return (\n      <div>\n        <CounterManager {...props} />\n        {counterItems}\n      </div>\n    );\n  }\n}\n\nCounterManagerContainer.propTypes = {\n  addCounter: PropTypes.func,\n  removeCounter: PropTypes.func,\n  resetCounterManager: PropTypes.func,\n  totalCounters: PropTypes.func,\n};\n\nexport default CounterManagerContainer;\n","import \"./App.css\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport NavTabs from \"./views/navTabs\";\nimport CounterManagerContainer from \"./containers/CounterManagerContainer\";\nimport aboutPage from \"./views/pages/aboutPage\";\n\nimport { root, home, about, emptyPage, counters } from \"./AppRoutes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavTabs />\n        \n        <Routes>\n          <Route path={root} element={<h2>App is running on 'root' page.</h2>} />\n          <Route path={home} element={<h2>App is running on 'home' page.</h2>} />\n          <Route path={about} element={<aboutPage />} />\n          <Route path={counters} element={<CounterManagerContainer />} />\n          <Route path={emptyPage} element={<h2>App is running on '404' page.</h2>} />\n          <Route path=\"*\" element={<h2>App is running on '404' page.</h2>} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}